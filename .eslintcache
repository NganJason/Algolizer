[{"/Users/jason.ngan/Desktop/projects/algolizer/src/index.js":"1","/Users/jason.ngan/Desktop/projects/algolizer/src/App.js":"2","/Users/jason.ngan/Desktop/projects/algolizer/src/components/ButtonBox.js":"3","/Users/jason.ngan/Desktop/projects/algolizer/src/components/Stage.js":"4","/Users/jason.ngan/Desktop/projects/algolizer/src/components/Navbar.js":"5","/Users/jason.ngan/Desktop/projects/algolizer/src/components/Cell.js":"6","/Users/jason.ngan/Desktop/projects/algolizer/src/components/TitleBox.js":"7","/Users/jason.ngan/Desktop/projects/algolizer/src/components/styles/StyledStage.js":"8","/Users/jason.ngan/Desktop/projects/algolizer/src/utils.js":"9","/Users/jason.ngan/Desktop/projects/algolizer/src/components/styles/StyledCell.js":"10","/Users/jason.ngan/Desktop/projects/algolizer/src/components/ButtonBoard.js":"11","/Users/jason.ngan/Desktop/projects/algolizer/src/algorithms/aStar.js":"12","/Users/jason.ngan/Desktop/projects/algolizer/src/components/TriggerButton.js":"13","/Users/jason.ngan/Desktop/projects/algolizer/src/hooks/pathFinder/useOption.js":"14","/Users/jason.ngan/Desktop/projects/algolizer/src/hooks/pathFinder/useStage.js":"15","/Users/jason.ngan/Desktop/projects/algolizer/src/hooks/pathFinder/useLocation.js":"16","/Users/jason.ngan/Desktop/projects/algolizer/src/screens/PathFinder.js":"17","/Users/jason.ngan/Desktop/projects/algolizer/src/screens/Sorting.js":"18","/Users/jason.ngan/Desktop/projects/algolizer/src/components/styles/StyledBlock.js":"19","/Users/jason.ngan/Desktop/projects/algolizer/src/algorithms/sortingAlgo.js":"20","/Users/jason.ngan/Desktop/projects/algolizer/src/components/SliderBar.js":"21","/Users/jason.ngan/Desktop/projects/algolizer/src/screens/Backtracking.js":"22","/Users/jason.ngan/Desktop/projects/algolizer/src/components/styles/StyledSudokuCell.js":"23","/Users/jason.ngan/Desktop/projects/algolizer/src/algorithms/backtracking.js":"24","/Users/jason.ngan/Desktop/projects/algolizer/src/screens/Home.js":"25","/Users/jason.ngan/Desktop/projects/algolizer/src/components/Carousel.js":"26","/Users/jason.ngan/Desktop/projects/algolizer/src/components/CardGrid.js":"27","/Users/jason.ngan/Desktop/projects/algolizer/src/components/Card.js":"28"},{"size":219,"mtime":1607476658195,"results":"29","hashOfConfig":"30"},{"size":840,"mtime":1608717161857,"results":"31","hashOfConfig":"30"},{"size":315,"mtime":1607560456419,"results":"32","hashOfConfig":"30"},{"size":1191,"mtime":1608954876180,"results":"33","hashOfConfig":"30"},{"size":880,"mtime":1608798007349,"results":"34","hashOfConfig":"30"},{"size":647,"mtime":1608879448946,"results":"35","hashOfConfig":"30"},{"size":190,"mtime":1607478578062,"results":"36","hashOfConfig":"30"},{"size":388,"mtime":1608681810067,"results":"37","hashOfConfig":"30"},{"size":2407,"mtime":1608716619727,"results":"38","hashOfConfig":"30"},{"size":393,"mtime":1608954865208,"results":"39","hashOfConfig":"30"},{"size":408,"mtime":1608880194155,"results":"40","hashOfConfig":"30"},{"size":3461,"mtime":1608211666287,"results":"41","hashOfConfig":"30"},{"size":242,"mtime":1608687555615,"results":"42","hashOfConfig":"30"},{"size":213,"mtime":1608211212933,"results":"43","hashOfConfig":"30"},{"size":2356,"mtime":1608954837927,"results":"44","hashOfConfig":"30"},{"size":673,"mtime":1608954808306,"results":"45","hashOfConfig":"30"},{"size":1728,"mtime":1608966649782,"results":"46","hashOfConfig":"30"},{"size":4083,"mtime":1608716694058,"results":"47","hashOfConfig":"30"},{"size":357,"mtime":1608625911347,"results":"48","hashOfConfig":"30"},{"size":5601,"mtime":1608633001178,"results":"49","hashOfConfig":"30"},{"size":432,"mtime":1608388720627,"results":"50","hashOfConfig":"30"},{"size":1765,"mtime":1608716589398,"results":"51","hashOfConfig":"30"},{"size":636,"mtime":1608687154236,"results":"52","hashOfConfig":"30"},{"size":1971,"mtime":1608967220201,"results":"53","hashOfConfig":"30"},{"size":950,"mtime":1608952900672,"results":"54","hashOfConfig":"30"},{"size":745,"mtime":1608730871131,"results":"55","hashOfConfig":"30"},{"size":1004,"mtime":1608951027203,"results":"56","hashOfConfig":"30"},{"size":817,"mtime":1608950137492,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1ykul65",{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"60"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"/Users/jason.ngan/Desktop/projects/algolizer/src/index.js",[],["126","127"],"/Users/jason.ngan/Desktop/projects/algolizer/src/App.js",["128"],"import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport PathFinder from \"./screens/PathFinder\";\nimport Sorting from \"./screens/Sorting\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Backtracking from \"./screens/Backtracking\";\nimport Home from \"./screens/Home\";\n\nfunction App() {\n  // Hooks\n\n  return (\n    <Router>\n      <div className=\"grid-container\">\n        <div className=\"nav\">\n          <Navbar />\n        </div>\n        <div className=\"main-body\">\n          <Route exact path=\"/\" component={Home}></Route>\n          <Route exact path=\"/pathfinder\" component={PathFinder}></Route>\n          <Route path=\"/sorting\" component={Sorting}></Route>\n          <Route path=\"/backtracking\" component={Backtracking}></Route>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/jason.ngan/Desktop/projects/algolizer/src/components/ButtonBox.js",[],"/Users/jason.ngan/Desktop/projects/algolizer/src/components/Stage.js",[],"/Users/jason.ngan/Desktop/projects/algolizer/src/components/Navbar.js",["129","130"],"import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <div className=\"navbar\">\n      <div>\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n          <h1 className=\"navbrand\">Algolizer</h1>\n        </Link>\n      </div>\n      <div className=\"navItems\">\n        <div>\n          <Link to=\"/\" className=\"navItem\">\n            Home\n          </Link>\n        </div>\n        <div>\n          <Link to=\"/pathfinder\" className=\"navItem\">\n            Path Finder\n          </Link>\n        </div>\n        <div>\n          <Link to=\"/sorting\" className=\"navItem\">\n            Sorting\n          </Link>\n        </div>\n        <div>\n          <Link to=\"/backtracking\" className=\"navItem\">\n            Backtracking\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","/Users/jason.ngan/Desktop/projects/algolizer/src/components/Cell.js",["131"],"import React, { useState } from \"react\";\nimport { StyledCell } from \"./styles/StyledCell\";\n\nconst Cell = ({\n  cell,\n  type,\n  callback,\n  option,\n  mouseDownHandler,\n  mouseUpHandler,\n  mouseEnterHandler,\n  mouseDown,\n}) => {\n  return (\n    <StyledCell\n      id={`cell-${cell.row}-${cell.col}`}\n      type={type}\n      onClick={() => {\n        callback(cell, option);\n      }}\n      onMouseDown={(e) => {\n        mouseDownHandler(e);\n      }}\n      onMouseUp={(e) => {\n        mouseUpHandler(e);\n      }}\n      onMouseEnter={(e) => {\n        mouseEnterHandler(e, mouseDown, cell, option);\n      }}\n    ></StyledCell>\n  );\n};\n\nexport default Cell;\n","/Users/jason.ngan/Desktop/projects/algolizer/src/components/TitleBox.js",[],"/Users/jason.ngan/Desktop/projects/algolizer/src/components/styles/StyledStage.js",[],"/Users/jason.ngan/Desktop/projects/algolizer/src/utils.js",["132","133","134","135"],"export const STAGE_WIDTH = 70;\nexport const STAGE_HEIGHT = 25;\n\nexport const isEmpty = (obj) => {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) return false;\n  }\n  return true;\n};\n\n// Path finder\nexport const createPathCell = (row, col) => {\n  return {\n    type: \"\",\n    row: row,\n    col: col,\n    f_score: null,\n    g_score: null,\n    h_score: null,\n    parent: null,\n  };\n};\n\nexport const createStage = () => {\n  let stage = [];\n  for (let row = 0; row < STAGE_HEIGHT; row++) {\n    let stage_row = [];\n    for (let col = 0; col < STAGE_WIDTH; col++) {\n      let cell = createPathCell(row, col);\n      stage_row.push(cell);\n    }\n    stage.push(stage_row);\n  }\n  return stage;\n};\n\n// Backtracking\n\nexport const sudoku_board = [\n  [6, 0, 9, 0, 0, 4, 0, 0, 1],\n  [8, 0, 0, 0, 5, 0, 0, 0, 0],\n  [0, 3, 5, 1, 0, 9, 0, 0, 8],\n  [0, 0, 8, 0, 0, 0, 0, 0, 4],\n  [0, 5, 0, 0, 0, 0, 0, 3, 0],\n  [4, 0, 0, 0, 7, 0, 0, 5, 2],\n  [0, 0, 0, 0, 0, 1, 0, 0, 0],\n  [0, 0, 1, 0, 4, 0, 0, 0, 0],\n  [7, 6, 0, 9, 3, 0, 0, 0, 0],\n];\n\nexport const createSudokuCell = (val, row, col) => {\n  if (val === 0) {\n    return {\n      val: 0,\n      row: row,\n      col: col,\n      isDefault: false,\n    };\n  } else {\n    return {\n      val: val,\n      row: row,\n      col: col,\n      isDefault: true,\n    };\n  }\n};\n\nexport const createBoard = (arr) => {\n  let board = [];\n\n  for (let row = 0; row < arr.length; row++) {\n    let board_row = [];\n    for (let col = 0; col < arr[0].length; col++) {\n      let board_cell = createSudokuCell(arr[row][col], row, col);\n      board_row.push(board_cell);\n    }\n    board.push(board_row);\n  }\n  return board;\n};\n\nexport const resetSudokuCell = (board) => {\n  board.map((row) => {\n    row.map((cell) => {\n      if (cell.isDefault === false) {\n        let cellElmt = document.getElementById(`cell-${cell.row}-${cell.col}`);\n        cellElmt.textContent = \"\";\n      }\n    });\n  });\n};\n\n// Sorting\n\nexport const createBlock = (idx) => {\n  return {\n    height: Math.floor(Math.random() * 90),\n    index: idx,\n  };\n};\n\nexport const createBlocks = (width) => {\n  let blocks = new Array(width);\n  for (let i = 0; i < blocks.length; i++) {\n    blocks[i] = createBlock(i);\n  }\n\n  return blocks;\n};\n\nexport const resetBlockHeight = (blocks) => {\n  let newBLock = blocks.map((block, idx) => {\n    let block_elmt = document.getElementById(`block-${idx}`);\n    block_elmt.style.height = \"\";\n  });\n};\n","/Users/jason.ngan/Desktop/projects/algolizer/src/components/styles/StyledCell.js",[],"/Users/jason.ngan/Desktop/projects/algolizer/src/components/ButtonBoard.js",[],"/Users/jason.ngan/Desktop/projects/algolizer/src/algorithms/aStar.js",["136","137"],"export const findNeighbours = (stage, cell) => {\n  let neighbours = [];\n  for (let i = -1; i < 2; i++) {\n    for (let j = -1; j < 2; j++) {\n      let row = cell.row + i;\n      let col = cell.col + j;\n      if (row !== cell.row && col !== cell.col) {\n        continue;\n      }\n      if (row >= stage.length || col >= stage[0].length || row < 0 || col < 0) {\n        continue;\n      }\n      if (i === 0 && j === 0) {\n        continue;\n      }\n      if (stage[row][col].type === \"block\") {\n        continue;\n      }\n      neighbours.push(stage[row][col]);\n    }\n  }\n  return neighbours;\n};\n\nexport const calc_heuristic = (start, end) => {\n  let dist = Math.sqrt(\n    Math.pow(start.row - end.row, 2) + Math.pow(start.col - end.col, 2)\n  );\n\n  return dist;\n};\n\nexport const get_min_f_score = (open_list) => {\n  let min_f = open_list[0].f_score;\n  let min_cell = {};\n\n  open_list.forEach((cell) => {\n    if (cell.f_score <= min_f) {\n      min_f = cell.f_score;\n      min_cell = cell;\n    }\n  });\n  return min_cell;\n};\n\nexport const updateScore = (current, neighbour, end) => {\n  let h = calc_heuristic(neighbour, end);\n  let g = calc_heuristic(neighbour, current) + current.g_score;\n\n  let f = g + h;\n  neighbour.h_score = h;\n  if (f < neighbour.f_score || neighbour.f_score === null) {\n    neighbour.f_score = f;\n    neighbour.g_score = g;\n    neighbour.parent = current;\n  }\n};\n\nexport const printPath = (end, stage) => {\n  let node = end.parent;\n  let timeCounter = 1;\n\n  while (node.type !== \"start\") {\n    let cell = document.getElementById(`cell-${node.row}-${node.col}`);\n    node = node.parent;\n    setTimeout(() => {\n      cell.classList.add(\"node-shortest-path\");\n    }, 20 * timeCounter);\n    timeCounter++;\n  }\n};\n\nexport const aStarFindPath = (start, end, stage, setStage, updateLocation) => {\n  if (!start || !end) {\n    alert(\"Please select start and end location\");\n    return;\n  }\n  let open_list = [];\n  let close_list = [];\n\n  start.h_score = calc_heuristic(start, end);\n  start.f_score = start.h_score;\n  open_list.push(start);\n  let current = get_min_f_score(open_list);\n\n  let i = 0;\n  while (current.type !== \"end\") {\n    current = get_min_f_score(open_list);\n    open_list.splice(open_list.indexOf(current), 1);\n\n    if (current.type == \"end\") {\n      break;\n    }\n\n    if (current.type !== \"start\" && current.type !== \"end\") {\n      close_list.push(current);\n\n      let cell = document.getElementById(`cell-${current.row}-${current.col}`);\n      setTimeout(() => {\n        cell.classList.add(\"node-visited\");\n      }, 5 * i);\n\n      i++;\n      current.type = \"close\";\n    }\n\n    let neighbour_list = findNeighbours(stage, current);\n    neighbour_list.forEach((neighbour) => {\n      if (neighbour.type === \"block\") {\n        return;\n      }\n      if (neighbour.type !== \"close\" && neighbour.type !== \"start\") {\n        updateScore(current, neighbour, end);\n      } else {\n        return;\n      }\n\n      if (!open_list.includes(neighbour) && neighbour.type !== \"start\") {\n        open_list.push(neighbour);\n      }\n\n      if (neighbour.type !== \"start\" && neighbour.type !== \"end\") {\n        stage[neighbour.row][neighbour.col].type = \"open\";\n        let cell = document.getElementById(\n          `cell-${neighbour.row}-${neighbour.col}`\n        );\n\n        setTimeout(() => {\n          cell.classList.add(\"node-visited\");\n        }, 3 * i);\n        i++;\n      }\n    });\n  }\n  setTimeout(() => {\n    printPath(current, stage);\n  }, 5 * i);\n};\n","/Users/jason.ngan/Desktop/projects/algolizer/src/components/TriggerButton.js",[],"/Users/jason.ngan/Desktop/projects/algolizer/src/hooks/pathFinder/useOption.js",[],"/Users/jason.ngan/Desktop/projects/algolizer/src/hooks/pathFinder/useStage.js",["138","139","140","141"],"import { useState, useEffect } from \"react\";\nimport { createStage, isEmpty } from \"../../utils\";\n\nexport const useStage = (location, setLocation) => {\n  const [stage, setStage] = useState(createStage());\n\n  const resetStage = (resetStartEnd) => {\n    resetCellColor(stage);\n    let newStage = createStage();\n\n    if (resetStartEnd) {\n      setLocation({\n        start: null,\n        end: null,\n        block: {},\n        open: {},\n        close: {},\n      });\n    } else {\n      newStage = resetCellType(stage);\n    }\n    setStage(newStage);\n  };\n\n  const updateStage = (prevStage) => {\n    // Flush out the old cells\n    const newStage = prevStage.map((row) =>\n      row.map((cell) => {\n        if (cell.type === \"start\" || cell.type === \"end\") {\n          let cell_copy = { ...cell, type: \"\" };\n          return cell_copy;\n        } else {\n          let cell_copy = { ...cell };\n          return cell_copy;\n        }\n      })\n    );\n    if (!isEmpty(location.start)) {\n      newStage[location.start.row][location.start.col].type = \"start\";\n    }\n    if (!isEmpty(location.end)) {\n      newStage[location.end.row][location.end.col].type = \"end\";\n    }\n    if (!isEmpty(location.block)) {\n      newStage[location.block.row][location.block.col].type = \"block\";\n    }\n    if (!isEmpty(location.close)) {\n      newStage[location.close.row][location.close.col].type = \"close\";\n    }\n    if (!isEmpty(location.open)) {\n      newStage[location.open.row][location.open.col].type = \"open\";\n    }\n    return newStage;\n  };\n\n  useEffect(() => {\n    setStage((prev) => updateStage(prev));\n  }, [location]);\n\n  return [stage, setStage, resetStage];\n};\n\nexport const resetCellColor = (stage) => {\n  let newStage = stage.map((row) => {\n    row.map((cell) => {\n      let node = document.getElementById(`cell-${cell.row}-${cell.col}`);\n      node.classList.remove(\"node-visited\");\n      node.classList.remove(\"node-shortest-path\");\n    });\n  });\n};\n\nexport const resetCellType = (stage) => {\n  let newStage = stage.map((row) => {\n    return row.map((cell) => {\n      if (\n        cell.type === \"start\" ||\n        cell.type === \"end\" ||\n        cell.type === \"block\"\n      ) {\n        let cell_copy = { ...cell };\n\n        return cell_copy;\n      } else {\n        let cell_copy = { ...cell, type: \"\" };\n        return cell_copy;\n      }\n    });\n  });\n  return newStage;\n};\n","/Users/jason.ngan/Desktop/projects/algolizer/src/hooks/pathFinder/useLocation.js",[],"/Users/jason.ngan/Desktop/projects/algolizer/src/screens/PathFinder.js",[],"/Users/jason.ngan/Desktop/projects/algolizer/src/screens/Sorting.js",[],"/Users/jason.ngan/Desktop/projects/algolizer/src/components/styles/StyledBlock.js",["142"],"import styled from \"styled-components\";\n\nlet color = {\n  start: \"var(--buttonStart)\",\n  end: \"var(--buttonEnd)\",\n  block: \"var(--buttonBlock)\",\n};\n\nexport const StyledBlock = styled.div`\n  height: ${(props) => [props.height]}%;\n  width: calc(100% / ${(props) => props.width});\n  background-color: #4e8d7c;\n  margin: 0 2px;\n  border: 0.1px solid #d6e0f0;\n`;\n","/Users/jason.ngan/Desktop/projects/algolizer/src/algorithms/sortingAlgo.js",[],"/Users/jason.ngan/Desktop/projects/algolizer/src/components/SliderBar.js",[],"/Users/jason.ngan/Desktop/projects/algolizer/src/screens/Backtracking.js",["143","144"],"import React, { useState } from \"react\";\nimport TriggerButton from \"../components/TriggerButton\";\nimport Cell from \"../components/Cell\";\nimport { StyledSudokuCell } from \"../components/styles/StyledSudokuCell\";\nimport { StyledStage } from \"../components/styles/StyledStage\";\nimport { sudoku_board, createBoard, resetSudokuCell } from \"../utils\";\nimport { solve_sudoku } from \"../algorithms/backtracking\";\n\nconst Backtracking = () => {\n  const [board, setBoard] = useState(createBoard(sudoku_board));\n\n  return (\n    <div className=\"horizontal-box\">\n      <div className=\"sudoku-board\">\n        {board.map((row) => {\n          return (\n            <div className=\"sudoku-row\">\n              {row.map((cell) => {\n                return (\n                  <StyledSudokuCell\n                    id={`cell-${cell.row}-${cell.col}`}\n                    className=\"sudoku-cell\"\n                    isDefault={cell.isDefault}\n                  >\n                    {cell.val !== 0 ? cell.val : \"\"}\n                  </StyledSudokuCell>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n      <div className=\"sudoku-button\">\n        <TriggerButton\n          text=\"Solve\"\n          variant=\"primary\"\n          callback={() => {\n            let time_counter = [1];\n            let board_copy = [...board];\n            solve_sudoku(board_copy, 0, 0, time_counter);\n            // setBoard(board_copy);\n          }}\n        ></TriggerButton>\n        <TriggerButton\n          text=\"Reset\"\n          variant=\"secondary\"\n          callback={() => {\n            resetSudokuCell(board);\n            setBoard(createBoard(sudoku_board));\n          }}\n        ></TriggerButton>\n      </div>\n    </div>\n  );\n};\n\nexport default Backtracking;\n","/Users/jason.ngan/Desktop/projects/algolizer/src/components/styles/StyledSudokuCell.js",[],"/Users/jason.ngan/Desktop/projects/algolizer/src/algorithms/backtracking.js",[],"/Users/jason.ngan/Desktop/projects/algolizer/src/screens/Home.js",["145","146","147"],"import React, { useEffect } from \"react\";\nimport CardGrid from \"../components/CardGrid\";\nimport Carousel from \"../components/Carousel\";\nimport TitleBox from \"../components/TitleBox\";\n\nconst Home = () => {\n  return (\n    <div className=\"homescreen-container\">\n      <div className=\"homescreen-banner\">\n        <video\n          autoplay=\"autoplay\"\n          loop=\"true\"\n          muted=\"muted\"\n          className=\"banner-video\"\n        >\n          <source src=\"video/galaxy.mp4\" type=\"video/mp4\" />\n        </video>\n        <div className=\"banner-caption\">\n          <div>\n            <h1 className=\"banner-text\">Algolizer</h1>\n          </div>\n        </div>\n      </div>\n\n      <CardGrid></CardGrid>\n    </div>\n  );\n};\n\nexport default Home;\n\n// <video\n//   onMouseEnter={(e) => {\n//     playVid();\n//   }}\n//   class=\"preview\"\n//   src=\"https://www.youtube.com/watch?v=KTkkXphS0f4&t=80s\"\n//   poster=\"img/pathfinder2.jpg\"\n//   preload\n// ></video>;\n","/Users/jason.ngan/Desktop/projects/algolizer/src/components/Carousel.js",["148","149","150","151"],"import React from \"react\";\n\nconst Carousel = () => {\n  return (\n    <div className=\"slideshow-container\">\n      <div className=\"mySlides fade\">\n        <img src=\"img/pathfinder.jpg\" className=\"banner-img\" />\n        <div class=\"text\">Caption Text</div>\n      </div>\n      <div className=\"mySlides fade\">\n        <img src=\"img/sorting.jpg\" className=\"banner-img\" />\n        <div className=\"text\">Caption Text</div>\n      </div>\n      <a\n        className=\"prev\"\n        onClick={() => {\n          //   plusSlides(-1);\n        }}\n      >\n        &#10094;\n      </a>\n      <a\n        className=\"prev\"\n        onClick={() => {\n          //   plusSlides(1);\n        }}\n      >\n        &#10095;\n      </a>\n    </div>\n  );\n};\n\nexport default Carousel;\n","/Users/jason.ngan/Desktop/projects/algolizer/src/components/CardGrid.js",["152","153"],"import React from \"react\";\nimport Card from \"./Card\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nconst CardGrid = () => {\n  return (\n    <div>\n      <div className=\"card-grid\">\n        <Link to=\"/pathfinder\">\n          <Card\n            title=\"Path Finder\"\n            subtitle=\"Use Dijsktra and A Star algorithm to find the shortest path between two points.\"\n            vid=\"video/pathfinder3.mov\"\n          ></Card>\n        </Link>\n        <Link to=\"/sorting\">\n          <Card\n            title=\"Sorting\"\n            subtitle=\"Use multiple sorting algorithms to sort blocks with different heights.\"\n            vid=\"video/sorting3.mov\"\n          ></Card>\n        </Link>\n        <Link to=\"/backtracking\">\n          <Card\n            title=\"Backtracking\"\n            subtitle=\"Use backtracking algorithm to easily solve a sudoku board.\"\n            vid=\"video/backtracking.mov\"\n          ></Card>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default CardGrid;\n","/Users/jason.ngan/Desktop/projects/algolizer/src/components/Card.js",[],{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":5,"column":42,"nodeType":"160","messageId":"161","endLine":5,"endColumn":46},{"ruleId":"158","severity":1,"message":"162","line":2,"column":27,"nodeType":"160","messageId":"161","endLine":2,"endColumn":33},{"ruleId":"158","severity":1,"message":"163","line":2,"column":35,"nodeType":"160","messageId":"161","endLine":2,"endColumn":40},{"ruleId":"158","severity":1,"message":"164","line":1,"column":17,"nodeType":"160","messageId":"161","endLine":1,"endColumn":25},{"ruleId":"165","severity":1,"message":"166","line":84,"column":19,"nodeType":"167","messageId":"168","endLine":84,"endColumn":21},{"ruleId":"165","severity":1,"message":"166","line":85,"column":20,"nodeType":"167","messageId":"168","endLine":85,"endColumn":22},{"ruleId":"158","severity":1,"message":"169","line":113,"column":7,"nodeType":"160","messageId":"161","endLine":113,"endColumn":15},{"ruleId":"165","severity":1,"message":"166","line":113,"column":42,"nodeType":"167","messageId":"168","endLine":113,"endColumn":44},{"ruleId":"170","severity":1,"message":"171","line":91,"column":22,"nodeType":"172","messageId":"173","endLine":91,"endColumn":24},{"ruleId":"174","severity":1,"message":"175","line":108,"column":28,"nodeType":"167","messageId":"176","endLine":133,"endColumn":6},{"ruleId":"177","severity":1,"message":"178","line":58,"column":6,"nodeType":"179","endLine":58,"endColumn":16,"suggestions":"180"},{"ruleId":"158","severity":1,"message":"181","line":64,"column":7,"nodeType":"160","messageId":"161","endLine":64,"endColumn":15},{"ruleId":"165","severity":1,"message":"166","line":64,"column":34,"nodeType":"167","messageId":"168","endLine":64,"endColumn":36},{"ruleId":"165","severity":1,"message":"166","line":65,"column":20,"nodeType":"167","messageId":"168","endLine":65,"endColumn":22},{"ruleId":"158","severity":1,"message":"182","line":3,"column":5,"nodeType":"160","messageId":"161","endLine":3,"endColumn":10},{"ruleId":"158","severity":1,"message":"183","line":3,"column":8,"nodeType":"160","messageId":"161","endLine":3,"endColumn":12},{"ruleId":"158","severity":1,"message":"184","line":5,"column":10,"nodeType":"160","messageId":"161","endLine":5,"endColumn":21},{"ruleId":"158","severity":1,"message":"185","line":1,"column":17,"nodeType":"160","messageId":"161","endLine":1,"endColumn":26},{"ruleId":"158","severity":1,"message":"186","line":3,"column":8,"nodeType":"160","messageId":"161","endLine":3,"endColumn":16},{"ruleId":"158","severity":1,"message":"187","line":4,"column":8,"nodeType":"160","messageId":"161","endLine":4,"endColumn":16},{"ruleId":"188","severity":1,"message":"189","line":7,"column":9,"nodeType":"190","endLine":7,"endColumn":64},{"ruleId":"188","severity":1,"message":"189","line":11,"column":9,"nodeType":"190","endLine":11,"endColumn":61},{"ruleId":"191","severity":1,"message":"192","line":14,"column":7,"nodeType":"190","endLine":19,"endColumn":8},{"ruleId":"191","severity":1,"message":"192","line":22,"column":7,"nodeType":"190","endLine":27,"endColumn":8},{"ruleId":"158","severity":1,"message":"162","line":3,"column":27,"nodeType":"160","messageId":"161","endLine":3,"endColumn":33},{"ruleId":"158","severity":1,"message":"163","line":3,"column":35,"nodeType":"160","messageId":"161","endLine":3,"endColumn":40},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Route' is defined but never used.","'useState' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'newBLock' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'current', 'i', 'i'.","unsafeRefs","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateStage'. Either include it or remove the dependency array.","ArrayExpression",["195"],"'newStage' is assigned a value but never used.","'color' is assigned a value but never used.","'Cell' is defined but never used.","'StyledStage' is defined but never used.","'useEffect' is defined but never used.","'Carousel' is defined but never used.","'TitleBox' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"196","fix":"197"},"Update the dependencies array to be: [location, updateStage]",{"range":"198","text":"199"},[1583,1593],"[location, updateStage]"]